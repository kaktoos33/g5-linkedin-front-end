worker_processes auto;
user nginx;

events {

    worker_connections 1024;
}

http {

    include mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';

    # 1- Hardening
    server_tokens off;

    # Define limit zone
    #limit_req_zone $request_uri zone=MYZONE:10m rate=3r/s burst=5 nodelay;

    keepalive_timeout 65;
    send_timeout 65;

    # Skip buffering for static files
    sendfile on;
    # OPtimise sendfile packets
    tcp_nopush on;


    # Compress Response
    gzip on;
    gzip_comp_level 3;
    gzip_types text/css;
    gzip_types text/javascript;


    access_log /dev/stdout;
    error_log stderr;
    disable_symlinks off;

    server {
        listen 80;
        listen [::]:80;
        server_name manoosheh.ir ;
        client_max_body_size 5M;

        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        location / {
            return 302 https://$host$request_uri;
        }
    }

    server {

        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name manoosheh.ir;
        client_max_body_size 5M;

        root /usr/share/nginx/html;
        index index.html;
        try_files $uri $uri/ /index.html;


        # 2- Hardening
        add_header X-Frame-Options "SAMEORGIN";
        add_header X-XSS-Protection "1; mode=block";


        # in order to use http2 you must have ssl
        # ssl_certificate /etc/letsencrypt/live/manoosheh.ir/fullchain.pem;
        # ssl_certificate_key /etc/letsencrypt/live/manoosheh.ir/privkey.pem;

        ssl_certificate /etc/nginx/ssl/live/manoosheh.ir/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/live/manoosheh.ir/privkey.pem;
        

        # Enable DH params
        include /etc/letsencrypt/options-ssl-nginx.conf;
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

        # Enable HSTS
        add_header Strict-Transport-Security "max-age=31536000" always;

       

        location /graphql {
        proxy_pass http://app-server:8080/graphql;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    location /file {
        proxy_pass http://app-server:8080/file;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    error_page   500 502 503 504  /50x.html;

    location = /50x.html {
      root   /usr/share/nginx/html;
    }

        # SSL setions
#         ssl_session_cache shared:SSL:40m;
#         ssl_session_timeout 4h;
#         ssl_session_tickets on;


        # Cache static files
        location ~* \.(css|js|jpg|png|webp|svg)$ {
            access_log off;
            add_header Cache-Control public;
            add_header Pragma public;
            add_header Vary Accept-Encoding;
            expires 1M;
        }


        # restrict access to hidden files, just in case
        location ~ /\. {
            deny all;
        }
    }
   
}

# http{


#   server {

#     listen 80;

#     location / {
#       root   /usr/share/nginx/html;
#       index  index.html index.htm;
#       try_files $uri $uri/ /index.html;
#     }

#     location /graphql {
#         proxy_pass http://app-server:8080/graphql;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection 'upgrade';
#         proxy_set_header Host $host;
#         proxy_cache_bypass $http_upgrade;
#     }

#     location /file {
#         proxy_pass http://app-server:8080/file;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection 'upgrade';
#         proxy_set_header Host $host;
#         proxy_cache_bypass $http_upgrade;
#     }

#     error_page   500 502 503 504  /50x.html;

#     location = /50x.html {
#       root   /usr/share/nginx/html;
#     }

#   }
# }